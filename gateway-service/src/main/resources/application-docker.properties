spring.application.name=gateway-service
server.port=9090

# Microservice Configuration for Docker environment
product.service.url=http://product-service:8080
order.service.url=http://order-service:8081
inventory.service.url=http://inventory-service:8082
notification.service.url=http://notification-service:8083
auth.service.url=http://auth-service:8084

# Enable gateway actuator endpoints
management.endpoints.web.exposure.include=info,health,metrics,gateway,circuitbreakers
management.endpoint.gateway.access=unrestricted
management.endpoint.health.show-details=always

# Logging Configuration for debugging
logging.level.com.shadangi54.gateway=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web.reactive=INFO

# Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.product-service-cb.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.product-service-cb.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.product-service-cb.sliding-window-size=10
resilience4j.circuitbreaker.instances.product-service-cb.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.product-service-cb.permitted-number-of-calls-in-half-open-state=3

resilience4j.circuitbreaker.instances.order-service-cb.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.order-service-cb.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.order-service-cb.sliding-window-size=10
resilience4j.circuitbreaker.instances.order-service-cb.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.order-service-cb.permitted-number-of-calls-in-half-open-state=3

resilience4j.circuitbreaker.instances.inventory-service-cb.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.inventory-service-cb.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.inventory-service-cb.sliding-window-size=10
resilience4j.circuitbreaker.instances.inventory-service-cb.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.inventory-service-cb.permitted-number-of-calls-in-half-open-state=3

# Timeout Configuration
resilience4j.timelimiter.instances.product-service-circuit-breaker.timeout-duration=10s
resilience4j.timelimiter.instances.order-service-circuit-breaker.timeout-duration=10s
resilience4j.timelimiter.instances.inventory-service-circuit-breaker.timeout-duration=10s

# Redis Configuration for Rate Limiting
spring.data.redis.host=redis
spring.data.redis.port=6379

# Eureka Client Configuration for Docker
eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}

# OAuth2 Resource Server for Docker
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://auth-service:8084
