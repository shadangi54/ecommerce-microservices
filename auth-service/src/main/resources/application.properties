spring.application.name=auth-service
server.port=8084

# Database configuration
spring.datasource.url=jdbc:h2:mem:authdb;MODE=MySQL
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA and Hibernate configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql

#Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true

# OAuth2 Configuration (DISABLED)
# spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=web-client
# spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
# spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods=client_secret_basic
# spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types=authorization_code,refresh_token
# spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris=http://localhost:9090/login/oauth2/code/web-client-oidc
# spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris=http://localhost:9090/
# spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes=openid,profile,email,read,write
# spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=true

# JWT Configuration (DISABLED)
app.jwt.issuer-uri=http://auth-service:8084

#Actuator Configurations
management.endpoints.web.exposure.include=info,health,metrics